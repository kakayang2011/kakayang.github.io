/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode add = null;
        ListNode head = null;
        ListNode next = null;
        while(l1 != null || l2 != null){
            int addVal = (add == null)?0:add.val;
            int val1 = (l1 == null)?0:l1.val; 
            int val2 = (l2 == null)?0:l2.val;
            int sum = val1 + val2 + addVal;
            ListNode node = new ListNode(sum % 10);
            if(head == null){
                head = node;
                next = node;
            }else{
                next.next = node;
                next = node;
            }
            
            if(sum / 10 == 0){
                add = null;
            }else{
                add = new ListNode(sum / 10);
            }
            
            if(l1 != null){
                l1 = l1.next;
            }
            if(l2 != null){
                l2 = l2.next;
            }
        }
        
        if(add != null){
            next.next = add;
        }
        
        return head;
    }
}
